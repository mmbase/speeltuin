install notes for the vpro-wizards
--------------------------------
The vpro-wizards is part of the mmbase applications, and can be build and installed with both ant and maven. Mind you don't need to build the vpro-wizards if you just want to use them. ready build packages are available for download.
Make sure you read the 'Considerations' section carefully.


Ant installation
--------------------------------
If you want to install the vpro-wizards into an existing webapp, you need to have mmbase checked out completely. Make sure you first build mmbase, for instance with "ant webapp"

The applications build script allows you to install an application into an mmbase webapp. by default this is the webapp that is created by running "ant webapp" in the mmbase root directory. This webapp is created in /build/mmbase/mmbase-webapp.

To install the vpro-wizards in such a way, run "ant install" in the /applications/vpro-wizard directory. 

If you want to install the vpro-wizards in a mmbase webapp at another location, use: "ant -Dwebapp.dir=[path to webapp] install".


Maven installation
--------------------------------
Unfortunately mmbase maven support is limited to maven 1.1.
To install the vpro-wizards with maven, you don't need to checkout mmbase at all. All the components you need are prebuild and ready to download.
You just have to add some stuff to the maven build of your webapp that will use the vpro-wizards.

When you use maven you will need to use the mmbase-module plug-in to install the vpro-wizards from a repository into your webapp.
First you have to add the plug-in as dependency to your project. Here is an example:

  <dependency>
      <groupId>mmapps</groupId>
      <artifactId>maven-mmbase-module-plugin</artifactId>
      <version>1.4</version>
      <type>plugin</type>
      <url>http://mmapps.sourceforge.net/maven-mmbase-module-plugin/</url>
  </dependency>

Next you create a dependency to the vpro-wizards and set a few properties that the mmbase-module plug-in uses:

  <dependency>
        <groupId>mmbase</groupId>
      <artifactId>mmbase-vpro-wizards</artifactId>
      <version>1.9.0-SNAPSHOT</version>
      <type>mmbase-module</type>
      <properties>
        <mmbase.templates.path>mmbase/vpro-wizards</mmbase.templates.path>
        <mmbase.examples.bundle>true</mmbase.examples.bundle>
        <mmbase.examples.path>mmbase/examples/vpro-wizards</mmbase.examples.path>
      </properties>
      </dependency>
  </dependencies>

of course you can leave out the examples properties, but don't change the templates.path property, or the vpro-wizards won't work.

Now create (or extend) a maven.xml file, with the following lines:

<?xml version="1.0" encoding="UTF-8"?>
<postGoal name="war:webapp">
  <attainGoal name="mmbase-module:obtain-modules"/>
</postGoal>

Now when you run the "war:war" task the vpro-wizards will be part of the created webapp.

For more information about the mmbase-module plug-in: http://mmapps.sourceforge.net/maven-mmbase-module-plugin/

note: 
this method of installation assumes that the vpro-wizards mmbase module is present in the mmbase maven repository (at: http://www.mmbase.org/maven/mmbase/mmbase-modules/mmbase-vpro-wizards-[version].mmbase-module).
If for some reason this file is not available, you need to build the module yourself. here's how to do it:
1) check out mmbase
2) go to directory: "applications/vpro-wizards"
3) run "maven mmbase-module:install". The module is created and installed in your local maven repository.
4) proceed as normal.


Manual installation
--------------------------------
It is also possible to manually install the vpro-wizards. You can download a zip file containing the maven build module from http://www.mmbase.org/maven/mmbase/mmbase-modules.
This is a zip file you need to unzip, and place the various elements in the right place of your webapp.
1) the tagfiles folder content goes into [your webapp]/WEB-INF/tagfiles/vpro-wizards/
2) the templates folder content goes into [your webapp]/mmbase/vpro-wizards/
3) the examples folder content goes into [your webapp]/mmexamples/vpro-wizards/ (they are not mandatory)
4) the lib folder content goes into [your webapp]/WEB-INF/lib
5) the web.xml fragment in the WEB-INF dir needs to be merged into your applications web.xml.


Dependencies
--------------------------------
The vpro-wizards have a number of dependencies. Here is an overview:
VPRO-Wizards
  +- Spring
     +- commons-logging
     +- commons-lang
  +- Spring webmvc
  +- Nekohtml
     +- xerces
  +- collections-generic

If you want to use the CachHandlerInterceptor and the org.mmbase.applications.vprowizards.spring.cache.CacheWrapper You will also need need the oscache jar.

Spring-mock is used to run the (integration) tests, you don't need it for run- or compile time.

Nekohtml is an html parser/filter that is used to clean richtext input. 
Collections-generic is a version of commons-collections that supports generics.
You can examine the maven project.xml file to see what versions are used to build the VPRO-Wizards, and you can run "maven war:war" to create an archive that contains little more than these jars.


Considerations
---------------------------------
Some things that are important to know when  using the vpro-wizards
- The vpro-wizards use Spring mvc for handling actions. The means that a servlet declaration needs to be added to the webapp's web.xml. There is a web.xml.fragment file, that both ant and maven installations place in your webapps' WEB-INF folder. But you do need to merge the two manually, or the vpro-wizards won't work.
- The templates as they are in applications/vpro-wizards/templates are not complete. the build process downloads the fckeditor richtext editor, and copies them into the install directory for the vpro-wizard templates.
- The example editor is base on mynews, so make sure mynews is installed if you want to play around with those.

Enjoy!



