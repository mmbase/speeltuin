<?xml version="1.0" encoding="UTF-8"?>
<!-- 
This software is OSI Certified Open Source Software.
OSI Certified is a certification mark of the Open Source Initiative.

The license (Mozilla version 1.0) can be read at the MMBase site.
See http://www.MMBase.org/license
-->
<project
  xmlns:j="jelly:core"
  xmlns:ant="jelly:ant"
  xmlns:artifact="artifact"
  xmlns:license="license"
  xmlns:maven="jelly:maven"
  xmlns:util="jelly:util"
  xmlns:x="jelly:xml"
  xmlns:define="jelly:define"
>

  <goal name="all:eclipse" description="Generate Eclipse files for ALL Subprojects">
    <j:set var="maven.multiproject.excludes" value="project.xml" />
    <j:set var="goal" value="eclipse" />
    <attainGoal name="multiproject:goal" />
  </goal>

  <goal name="all:idea" description="Generate IntelliJ IDEA files for ALL Subprojects">
    <attainGoal name="idea:multiproject" />
  </goal>

  <goal name="all:site" description="Generate sites ALL Subprojects">
    <attainGoal name="multiproject:site"/>
  </goal>

  <goal name="all:install" description="Install ALL Subprojects">
    <attainGoal name="multiproject:install"/>
  </goal>

  <goal name="all:clean-install" description="Clean and install ALL Subprojects">
    <attainGoal name="all:clean"/>
    <attainGoal name="all:install"/>
  </goal>

  <goal name="all:clean" description="Clean ALL Subprojects">
    <attainGoal name="multiproject:clean"/>
  </goal>
  
  <!--
    ===========================================================================
    ALL:CLEAN-FAST Performs a Maven 'clean' on all projects.
    It doesn't use Maven's builtin 'clean' goal to prevent it from breaking
    when it can't resolve a new dependency.
  ===========================================================================
  -->
  <goal name="all:clean-fast" description="Clean ALL Subprojects without dependency checking">
    <j:if test="${empty(maven.multiproject.basedir)}">
      <j:set var="maven.multiproject.basedir" value="${basedir}" />
    </j:if>
    <j:if test="${empty(maven.multiproject.includes)}">
      <j:set var="maven.multiproject.includes" value="*/project.xml" />
    </j:if>
	
    <maven:reactor 
        banner="Gathering project list"
    	basedir="${maven.multiproject.basedir}"
        includes="${maven.multiproject.includes}"
        excludes="${maven.multiproject.excludes}"
        postProcessing="true"
        ignoreFailures="${maven.multiproject.ignoreFailures}"
        collectOnly="true" />
    
    <j:forEach var="reactorProject" items="${reactorProjects}">
        <!-- this list of things to delete is lifted from clean:clean -->
        <ant:delete dir="${reactorProject.context.getVariable('maven.build.dest')}" />
        <ant:delete dir="${reactorProject.context.getVariable('maven.build.dir')}" />
        <ant:delete file="${reactorProject.context.getVariable('basedir')}/velocity.log"
            quiet="true"
            failonerror="false" />
    </j:forEach>
  </goal>

  <goal name="mm:deploy-war">
    <j:if test="${empty(mmbase.war)}">
	  <j:set var="mmbase.war" value="mmbase-webapp"/>
	  <echo>mmbase.war missing. default setting ${mmbase.war}</echo>
    </j:if>
    <j:set var="maven.multiproject.includes" value="${mmbase.war}/project.xml" />
    <j:set var="goal" value="tomcat:deploy" />
    <attainGoal name="multiproject:goal" />
  </goal>

  <goal name="mm:checkout">
    <j:if test="${empty(context.getVariable('mmbase.checkout.dir'))}">
	  <j:set var="mmbase.checkout.dir" value="mmbase-head"/>
      <echo>mmbase.checkout.dir missing. default setting ${mmbase.checkout.dir}</echo>
    </j:if>

    <j:set var="cvsuser" value="guest"/>
    <j:set var="cvspasswd" value="guest"/>
    <j:set var="cvsmethod" value="pserver"/>
    <j:set var="cvsroot" value=":${cvsmethod}:${cvsuser}:${cvspasswd}@cvs.mmbase.org:/var/cvs" />

    <echo>checking out mmbase version '${mmbase.checkout.tag}' in ${mmbase.checkout.dir}/ ...</echo>
    <j:if test="${context.getVariable('mmbase.checkout.tag') == 'HEAD'}">
        <ant:cvs cvsRoot="${cvsroot}" package="all" dest="${mmbase.checkout.dir}" compression="true" />
    </j:if>
    <j:if test="${context.getVariable('mmbase.checkout.tag') != 'HEAD'}">
        <ant:cvs cvsRoot="${cvsroot}" package="all" dest="${mmbase.checkout.dir}" tag="${mmbase.checkout.tag}" compression="true" />
    </j:if>

    <ant:delete dir="mmbase-core/CVS"/>
  </goal>  

  <goal name="mm:mavenize">
    <!-- marcel: jexl bug: property-vars can be queried but empty() flags them as being empty -->
    <j:set var="mmbase.checkout.dir" value="${mmbase.checkout.dir}/mmbase" />

    <j:if test="${empty(context.getVariable('mmbase.checkout.dir'))}">
	  <j:set var="mmbase.checkout.dir" value="mmbase-head/mmbase"/>
      <echo>mmbase.checkout.dir missing. default setting ${mmbase.checkout.dir}</echo>
    </j:if>
    
    <j:set var="taglibroot" value="${mmbase.checkout.dir}/applications/taglib"/>
    <j:set var="documentationroot" value="${mmbase.checkout.dir}/documentation"/>

    <ant:copy todir="mmbase-core/src/java">
      <ant:fileset dir="${mmbase.checkout.dir}/src" defaultexcludes="no">
		<!-- ant:exclude name="org/mmbase/util/images/JAIImageConverter.java"/ -->
        <ant:exclude name="org/mmbase/module/JMSendMail.java"/>
        <ant:exclude name="org/mmbase/module/database/support/MMOracle.java"/>
        <ant:exclude name="org/mmbase/module/database/support/MMInformix42Node.java"/>
      </ant:fileset>
    </ant:copy>
    <j:if test="${context.getVariable('mmbase.checkout.tag') == 'HEAD'}">
      <ant:copy todir="mmbase-core/src/tests">
        <ant:fileset dir="${mmbase.checkout.dir}/tests/bridge"/>
        <ant:fileset dir="${mmbase.checkout.dir}/tests/common"/>
        <ant:fileset dir="${mmbase.checkout.dir}/tests/convertimage"/>
        <ant:fileset dir="${mmbase.checkout.dir}/tests/dbsq"/>
        <ant:fileset dir="${mmbase.checkout.dir}/tests/typerel"/>
      </ant:copy>
    </j:if>
    <ant:copy todir="mmbase-core/src/tests/config">
      <ant:fileset dir="${mmbase.checkout.dir}/tests/config"/>
    </ant:copy>
    <ant:copy todir="mmbase-webapp/src/webapp">
      <ant:fileset dir="${mmbase.checkout.dir}/html"/>
    </ant:copy>
    <ant:copy todir="mmbase-core/src/tests/config">
      <ant:fileset dir="${mmbase.checkout.dir}/tests/config"/>
    </ant:copy>
    <ant:copy todir="mmbase-core-config/config">
      <ant:fileset dir="${mmbase.checkout.dir}/config"/>
    </ant:copy>
    <ant:copy todir="mmbase-taglib/src/java">
      <ant:fileset dir="${taglibroot}/src"/>
    </ant:copy>
    <ant:copy todir="mmbase-docs/doc">
      <ant:fileset dir="${documentationroot}">
      	<ant:exclude name="build.xml"/>
      	<ant:exclude name="build.properties"/>
      	<ant:exclude name="build.properties.default"/>
      </ant:fileset>
    </ant:copy>
  </goal>

  <goal name="mm:mavenize-clean" description="Clean all imported mmbase sources">
    <j:if test="${empty(maven.multiproject.basedir)}">
      <j:set var="maven.multiproject.basedir" value="${basedir}" />
    </j:if>
    <j:if test="${empty(maven.multiproject.includes)}">
      <j:set var="maven.multiproject.includes" value="*/project.xml" />
    </j:if>
	
    <maven:reactor 
        banner="Gathering project list"
    	basedir="${maven.multiproject.basedir}"
        includes="${maven.multiproject.includes}"
        excludes="${maven.multiproject.excludes}"
        postProcessing="true"
        ignoreFailures="${maven.multiproject.ignoreFailures}"
        collectOnly="true" />
    
    <j:forEach var="reactorProject" items="${reactorProjects}">
        <ant:delete dir="${reactorProject.context.getVariable('maven.build.dest')}" />
        <ant:delete dir="${reactorProject.context.getVariable('maven.build.dir')}" />
        <ant:delete file="${reactorProject.context.getVariable('basedir')}/velocity.log"
            quiet="true"
            failonerror="false" />
        <ant:delete dir="${reactorProject.context.getVariable('basedir')}/src" />
        <ant:delete dir="${reactorProject.context.getVariable('basedir')}/doc" />
        <ant:delete>
        	<fileset dir="${reactorProject.context.getVariable('basedir')}/config" excludes="**/INDEX"/>
        </ant:delete>
    </j:forEach>
  </goal>

</project>
