<project name="MMBaseTest" default="usage" basedir=".">

  <!-- =================================================================== -->
  <!-- Init                                                                -->
  <!-- =================================================================== -->
  <!-- Read customized values if available -->
  <property file="build.properties"/>
  <!-- Default values for properties that can be customized -->
  <!-- not currentl used
  <property name="source.dir"   location="../../../1.6/mmbase" />
  <property name="build.dir"    value="${source.dir}/build" />
  <property name="download.dir" value="${build.dir}/download" />
  <property name="expand.dir"   value="${download.dir}/expanded" />
  -->
  <property name="test.class"   value="org.mmbase.module.corebuilders.TypeRelTest" />

  <property name="project.source.dir"   value="." />
  <property name="project.build.dir" value="${project.source.dir}/build" />

  <!-- put mmbase.jar and junit.jar in this lib dir -->
  <property name="project.run.lib"      value="${project.source.dir}/lib" />
  <property name="project.compile.lib"  value="${project.run.lib}" />


  <target name="init">
    <available property="dummy" classname="dummy">
      <classpath id="compile.classpath">
        <fileset dir="${project.compile.lib}">
          <include name="*.jar"/>
          <include name="*.zip"/>
        </fileset>
      </classpath>
      
      <classpath id="run.classpath">
        <fileset dir="${project.run.lib}">
          <include name="*.jar"/>
          <include name="*.zip"/>
        </fileset>
        <pathelement location="${project.build.dir}/classes"/>
      </classpath>
    </available>  
  </target>



  <target name="compile" description="Compile the source directory" depends="init">

    <mkdir dir="${project.build.dir}/classes"/>
    <echo message="java version: ${ant.java.version}" />

    <echo message="copying" />

    <copy todir="${project.build.dir}/classes" includeEmptyDirs="false" >
      <fileset dir="${project.source.dir}">
        <include name="**/*.properties"/>
        <include name="**/LICENSE"/>
        <include name="**/*.dtd"/>
        <include name="**/*.xml"/>
        <exclude name="build/**"/>
      </fileset>
    </copy>

    <echo message="compiling" />

    <javac srcdir ="${project.source.dir}"
           destdir="${project.build.dir}/classes"
           debug="true"
           optimize="false"
           classpathref="compile.classpath"
           deprecation="true"
      >
      <include name="**/*.java"/>
    </javac>
  </target>



  <!-- =================================================================== -->
  <!-- Run the tests -->
  <!-- =================================================================== -->
  <target name="run.junit" description="Run the test"
          depends="compile,init">
    <java 
      classname="junit.textui.TestRunner"
      fork="true"
      classpathref="run.classpath"      
      >
      <arg value="${test.class}" />
    </java>
  </target>

  <target name="clean" depends="init">
    <delete dir="${project.build.dir}"/>
  </target>
</project>