<?xml version="1.0"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
  <head>
    <title>MMBase 1.9 - What's new</title>
    <script type="text/javascript" src="jquery-1.2.6.pack.js" />
    <script type="text/javascript" src="my.js" />
    <link rel="stylesheet" href="my.css" type="text/css" />
  </head>
  <body>
    <div id="releasenotes">
      <h1>MMBase 1.9 - What's new, and how would it affect you</h1>
      <h2><a href="#releasenotes">Release notes</a></h2>
      <div>
        <p>
          <a href="http://www.mmbase.org/jira/secure/ReleaseNote.jspa?version=10119&amp;styleName=Html&amp;projectId=10000&amp;Create=Create">
            http://www.mmbase.org/jira/secure/ReleaseNote.jspa?version=10119&amp;styleName=Html&amp;projectId=10000&amp;Create=Create
          </a>, <a href="../head/documentation/releases/release-notes.txt">release notes</a>
        </p>
        <ol>
          <li>
            Java 1.5. You can use generics also on mmbase objects (NodeList etc). Sometime must use StringBuilder in stead of StringBuffer.
            Btw, MMBase 1.9 also <em>compiles</em> with java 1.6 (unlike MMBase 1.8)
          </li>
          <li>Maven</li>
          <li>MMBase Framework</li>
          <li>A lot of new features and bugfixes</li>
        </ol>
      </div>
    </div>
    <div id="java15">
      <h2><a href="#java15">Java 1.5</a></h2>
      <div>
        <pre>
          NodeList nodeList = nodeManager.getList(query);
          NodeIterator i = nodeList.nodeIterator();
          while (i.hasNext()) {
              Node node = i.nextNode();
        </pre>
        <p>can become:</p>
        <pre>
          for (Node node : nodeManager.getList(query)) {
        </pre>
        <p>generics, foreach, varargs, autoboxing, stringbuilders etc.</p>
        <p>This should <em>not</em> affect you. It's only confortable for programmers.
        </p>
      </div>
    </div>
    <div  id="maven">
      <h2><a href="#maven">Maven</a></h2>
      <div>
        <ul>
          <li><em>one</em> not <em>two</em></li>
          <li>The artifacts look different, and are now available from <a href="http://www.mmbase.org/maven/mmbase/">http://www.mmbase.org/maven</a></li>
          <li>Dependencies are better taken care of now</li>
          <li>1.9-SNAPSHOT</li>
        </ul>
        <p>This affects you if you used to build MMBase yourself. You ought to switch to maven (1 or
        2) now.</p>
        <p>If you used to download MMBase from the mmbase site, this should go a bit differently
        now, because the artifacts are now distributed as 'mmbase-module's (not zips), with a
        version in the name. The jars can be downloaded too.</p>
        <p><a
        href="http://cvs.mmbase.org/viewcvs/all/install-dependency.xml?view=markup">all/install-dependency.xml</a>
        is an ant-include wich can install dependencies, for if you don't want to abandon ant. See
        e.g. didactor </p>
      </div>
    </div>
    <div id="framework">
      <h2><a href="#framework">MMBase Framework</a></h2>
      <div>
        <ul>
          <li>components with blocks</li>
          <li>url-filtering</li>
          <li>actions &amp; settings</li>
          <li>principles. <a href="http://www.mmbase.org/principles">www.mmbase.org/principles</a></li>
        </ul>

        <p>As long as you don't use it, this does <em>not</em> affect you.</p>
        <p>New admin-pages <a href="http://mm.meeuw.org/demo/mmbase/admin">Example</a></p>

        <h3>Using the framework</h3>

        <ul>
          <li>
            <a href="../head/config/components/core.xml">define and implement blocks.</a>
            <ul>
              <li>Blocks are pieces of HTML</li>
              <li>Can be implemented in every way you like. Jsp, java, etc.</li>
              <li>Links</li>
            </ul>
          </li>
          <li>
            classify blocks and use them on several places (example: the mmbase admin pages, shows
            every block classified as 'mmbase.admin')
          </li>
          <li>Noticably, you can use blocks to produce editwizard xml, and like that make the editwizards more dynamic, and even pluggable</li>
          <li>
            Implement a new framework, or only an <em>url converter</em>
            <pre>/magazine/2008/12/MMEvent_In_Maastricht</pre>
            The MyNewsUrlConverter will convert this to something like
            <pre>/mynews/render.jspx?article=12345</pre>
            And back
            <pre><![CDATA[
            <mm:link>
               <mm:frameworkparam name="component">mynews</mm:frameworkparam>
               <mm:param name="article">12345</mm:frameworkparam>
            </mm:link>
            ]]></pre>
          </li>
        </ul>
        <p>
          The framework may decide which block to show (e.g. /mmbase/admin). But you can also
          explicitely use blocks.
        </p>
        <pre>
          <![CDATA[
             Explicitely show one block:
             <mm:block component="news" name="index" />

             Abstractly show all blocks which are 'classified' in some way:
             <mm:blocks classification="top" />

             This last thing can also be done in editwizards
             <form-schema>
               <step>
                 <field name="title" />
                 <blocks classification="didactor.editwizard.education.fields" />
               </step>
               ....
          ]]>
        </pre>

      </div>
    </div>
    <div id="features">
      <h2><a href="#features">Other features</a></h2>
      <div>
        <h3>DataType related</h3>
        <p>DataTypes are XSD like syntax that can be used in the builder xmls to further specialize the type of a field (available in 1.8).
        </p>
        <pre><![CDATA[
    <field name="subtitle">
    ..
      <datatype base="line" xmlns="http://www.mmbase.org/xmlns/datatypes">
        <maxLength value="255" />
        <enumeration enforce="never">
          <entry xml:lang="nl" value="hokus pokus" />
          <entry xml:lang="nl" value="simsalabim" />
          <entry xml:lang="nl" value="pilatus pas" />
          <entry xml:lang="nl" value="abcracadabra" />
          <entry xml:lang="en" value="simsalabim" />
          <entry xml:lang="en" value="pilatus pas" />
          <entry xml:lang="en" value="hocus pocus" />
        </enumeration>
      </datatype>
    </field>
      ]]>
        </pre>
        <ul>
          <li>DataType can influence presentation in the editwizards -&gt; e.g. enumerations</li>
          <li>DataType restrictions can be checked using Ajax.</li>
        </ul>
        <h3>Forms</h3>
        <p>This combines MMBase transactions and datatypes to create editors with little effort. (experimental)</p>
        <pre><![CDATA[
        <mm:form>
          <table>
            <mm:fieldlist type="input">
              <tr>
                <th><mm:fieldinfo type="guiname" /></th>
                <td><mm:fieldinfo type="input" /></td>
                <td><mm:fieldinfo type="errors" /></td>
              </tr>
            </mm:fieldlist>
            <tr>
              <td />
              <td><input type="submit" name="submit" /></td>
            </tr>
          </table>
          <mm:import externid="submit" />
          <mm:present referid="submit">
            <mm:valid inverse="true">
              <mm:write referid="form" escape="none" />
              <p>Formulier is nog niet goed ingevuld</p>
            </mm:valid>
            <mm:valid>
              <p>Bedankt</p>
              <mm:commit />
            </mm:valid>
            </mm:present>
        </mm:form>
        ]]>
        </pre>
        <h3>Javascript</h3>
        <ol>
          <li>Validation</li>
          <li>
            Search &amp; Relate
            <pre><![CDATA[

<mm:listnodescontainer id="repository" type="images" />
<mm:relatednodescontainer id="related" type="images" />
<mm-sr:relate repository="${repository}" current="${related}" />

<mm-sr:relatednodes type="news" role="posrel" orderby="posrel.pos" />
            ]]>
            </pre>
          </li>
          <li>
            Widgets. Javascript to morph mm:fieldinfo type="input" to more interesting input widgets.
          </li>
        </ol>
        <!--
        <h3>Decimal</h3>
        <h3>Wiki</h3>
        -->
      </div>
    </div>
    <div id="thanks">
      <h2><a href="#thanks">Thanks</a></h2>
      <div>
        <p>Michiel.Meeuwissen@gmail.moc</p>
        <p><a href="http://www.dynasol.nl">www.dynasol.nl</a></p>
        <p><a href="http://www.mmbase.org/contact">www.mmbase.org/contact</a></p>
        <p><a href="http://www.mmbase.org/jira">www.mmbase.org/jira</a></p>
        <p>mihxil @ #mmbase @ SlashNet</p>
        <p>2008-12-11</p>
      </div>
    </div>
    <div id="filler">

    </div>
  </body>
</html>
