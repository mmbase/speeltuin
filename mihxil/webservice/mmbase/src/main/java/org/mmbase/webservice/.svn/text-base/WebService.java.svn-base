/*

This software is OSI Certified Open Source Software.
OSI Certified is a certification mark of the Open Source Initiative.

The license (Mozilla version 1.0) can be read at the MMBase site.
See http://www.MMBase.org/license

*/
package org.mmbase.webservice;

import javax.xml.stream.*;
import org.mmbase.security.Action;
import org.mmbase.security.ActionChecker;
import org.mmbase.util.LocalizedString;

import org.mmbase.util.functions.*;

/**
 * An instance of this interface describes one webservice. also See {@link AbstractWebService} .
 *
 * @author Michiel Meeuwissen
 * @version $Id$
 */
public interface WebService {

    /**
     * This possible value for {@link #getAction} return an Action which is always allowed for everybody.
     * Completely public WebService may naturally use this.
     */
    static final Action PUBLIC = new Action(WebService.class.getName(), "public", ActionChecker.ALLOWS);

    /**
     * The associated action, which defines who may execute this web service. Public web services may simply return {@link #PUBLIC}.
     * You may simply implemente the 'default action checker', but we can also leave it to the security implementation. (AFAIK no security has complete support for that yet).
     */
    Action getAction();

    void setAction(Action a);

    /**
     * This is the core of web-service. Based on some (optional) parameters (an empty object must be
     * created by {@link #createParameters} and then filled), it must create XML, by writing that to
     * the given XMLStreamWriter.
     */
    void serve(XMLStreamWriter writer, Parameters params) throws WebServiceException, XMLStreamException;

    /**
     * Creates an empty parameter object to fill and than pass to {@link #serve}
     */
    Parameters createParameters();

    Parameter[] getParameterDefinition();

    LocalizedString getDescription();


    /**
     * In the 'REST' formalism a certain web service can be associated with one or more of these 'type' of executing them. They correspond to the basic HTTP methods.
     */
    static enum Type {
        GET,
        POST,
        PUT,
        DELETE
    }

}
