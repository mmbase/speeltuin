Number: 0
Version: $Id: USE_THE_BRIDGE,v 1.2 2006-04-06 14:55:34 pierre Exp $
Architectural theme: Technical
Principle: Use the bridge
Qualification:
Explanation:
      When using Java code to communicate to MMBase one should only use the bridge interfaces.
Argumentation:
      In this way you separate MMBase core code from your own code. This gives core developers
      more freedom. Your code is less prone to break on an update of MMBase. The bridge is a subset
      of all MMBase classes, so it is easier to use.

      By using the bridge, you also automatically use MMBase security. We desire all exposed MMBase
      data to be subject to security.

Consequence:
      The following classes from the org.mmbase package can be used (this list is maintained in
      the build script of RMMCI)
        org/mmbase/bridge/*
        org/mmbase/bridge/util/**
        org/mmbase/storage/search/*
        org/mmbase/datatypes/**
        org/mmbase/security/UserContext
        org/mmbase/security/AuthenticationData*
        org/mmbase/security/Rank
        org/mmbase/security/SecurityException.class

        org/mmbase/util/functions/**

        org/mmbase/cache/CachePolicy*
        org/mmbase/cache/Cache*

        org/mmbase/util/**
        /only if they themselves obey this principle

        org/mmbase/storage/Storable.class
        org/mmbase/storage/StorageException.class

        org/mmbase/core/util/Fields
        org/mmbase/core/*
        org/mmbase/core/event/**

Allowed Implementations:
      Implementations can use the above classes. Normally they should leave instantiating the classes
      to the bridge - do not instantiate them through their constructors.
Source:
      http://cvs.mmbase.org/viewcvs/applications/rmmci/build.xml?view=markup
