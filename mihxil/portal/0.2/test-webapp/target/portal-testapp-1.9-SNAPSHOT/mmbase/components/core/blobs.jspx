<mm:content
    type="application/xml"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
    >
  <jsp:directive.page import="org.mmbase.storage.implementation.database.*" />
  <mm:cloud rank="administrator">
  <jsp:output omit-xml-declaration="true" />
  <div
      class="mm_c c_core b_blobs ${requestScope['org.mmbase.componentClassName']}"
      id="${requestScope['org.mmbase.componentId']}">
    <mm:import externid="convertnow" />

    <mm:notpresent referid="convertnow">
      <form>
        <input type="submit" name="convertnow" value="Convert"/>
        <p>
          Convert all the blobs (fields with type 'BYTE' of MMBase) to the right storage location.
          <a href="http://www.mmbase.org/docs17/releases/release-notes.txt">See release-notes of 1.7.0</a>.
          Before doing this, make sure that the 'old' blobdata dir is now WEB-INF/data. If you are
          converting from blobs-in-database, then only make sure this directory exists and is writeable.
        </p>
        <p>
          This might take a while, inspect the mmbase log while doing it please.
        </p>
      </form>
    </mm:notpresent>

    <mm:present referid="convertnow">
      <jsp:scriptlet>
        try {
        DatabaseStorageManager storage = (DatabaseStorageManager) org.mmbase.module.core.MMBase.getMMBase().getStorageManager();
        int result = storage.convertLegacyBinaryFiles();
        if (result &lt; 0) {
        out.print("Your database is not configured for blobs on disk");
        } else {
        out.print("Converted " + result + " fields");
        }
        } catch (Throwable e) {
        out.println("&lt;pre&gt;" + e.getClass().getName() + e.getMessage() + org.mmbase.util.logging.Logging.stackTrace(e) + "&lt;/pre&gt;");
        }
      </jsp:scriptlet>

    </mm:present>
  </div>
  </mm:cloud>
</mm:content>
