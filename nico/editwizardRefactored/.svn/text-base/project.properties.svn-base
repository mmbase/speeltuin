#   This software is OSI Certified Open Source Software.
#   OSI Certified is a certification mark of the Open Source Initiative.
#
#   The license (Mozilla version 1.0) can be read at the MMBase site.
#   See http://www.MMBase.org/license
#

# The following property are used in Maven project files to identify
# the currentVersion of a project and to specify which version to use
# of a dependent project. 
mmbase.version=1.8.4
maven.multiproject.type=mmbase-module

maven.remote.group=mmbase
maven.group=mmbase

# Specifies the version of the jdk in use. 
maven.compile.source=1.4
maven.compile.target=1.4
# See the ant javadoc task documentation for details.
maven.javadoc.source=1.4

# Runs the compiler in a separate process
# Corresponds to the fork attribute for the ant javac task. 
maven.compile.fork=true

# When using Java 1.4, it may be necessary to fork the JUnit tests to prevent XML parser issues.
maven.junit.fork=true
# Skip test classes. Don't compile and run the tests
maven.test.skip=false
# Set this to true to ignore a failure during testing.
maven.test.failure.ignore=true
# Adds system properties to the JVM executing the unit tests
# user.language and user.region are required for the locator
maven.junit.sysproperties=
maven.junit.jvmargs=-Dmmbase.config=${basedir}/src/tests/config

# Tell CVS to be quiet when doing updates.
maven.scm.cvs.quiet=true

# Allows the user to show the site generation date on the generated website.
# One can place the date in 5 locations with "maven.xdoc.date":
#    * left : on the left side of the breadcrumbs
#    * right : on the right side of the breadcrumbs, before the links
#    * navigation-top : above the user links, in the navigation menu
#    * navigation-bottom : under Maven's links, in the navigation menu
#    * bottom : after the organization name, in the footer
maven.xdoc.date=left
maven.xdoc.date.format = dd MMMM yyyy HH:mm z
maven.xdoc.version = ${pom.currentVersion}

# Specifies what predefined check set to use. 
# Available sets are "sun" (for the Sun coding conventions), "turbine" and "avalon".
#maven.checkstyle.format=turbine
maven.checkstyle.properties=${basedir}/checkstyle-mmbase.xml
maven.checkstyle.header.file=${basedir}/LICENSE.txt
maven.license.licenseFile=${basedir}/MPL10.txt

#By default we don't bundle dependency jars into wars
war.bundle=false

maven.javadoc.links=http://java.sun.com/j2se/1.4.2/docs/api/
# Specifies custom tags to use for the generated Javadocs.
maven.javadoc.customtags=todo application bad-constant bad-literal code-conventions core deprecated-now deprecation-used dependency duplicate javadoc language license move performance rename requires scope sql vpro

todo.name=todo
todo.description=To Do:
todo.enabled=true
todo.scope=all
application.name=application
application.description=Classifies the class as an APPLICATION class, belonging to the application with name application-name
application.enabled=true
application.scope=Class
bad-constant.name=bad-constant
bad-constant.description=Section contains hard-coded values, which should be made configurable.
bad-constant.enabled=true
bad-constant.scope=Field
bad-literal.name=bad-literal
bad-literal.description=Section contains literals (numeric or string constants), where constants (public final static identifiers) should be used.
bad-literal.enabled=true
bad-literal.scope=Method
code-conventions.name=code-conventions
code-conventions.description=The class needs to be adapted to the MMBase Coding Standards.
code-conventions.enabled=true
code-conventions.scope=Class
core.name=core
core.description=Classifies the class as a CORE class
core.enabled=true
core.scope=Class
deprecated-now.name=deprecated-now
deprecated-now.description=Section is deprecated and will be removed from the code. If this is a Class, the entire Class will be removed.
deprecated-now.enabled=true
deprecated-now.scope=Class, Method, Field
deprecation-used.name=deprecation-used
deprecation-used.description=Section uses deprecated (java) code, which will be fixed
deprecation-used.enabled=true
deprecation-used.scope=Method, Field
dependency.name=dependency
dependency.description=Section contains code which is depedent on a class, where it is undesirable. The code will be adapated to be more generic or moved to a more appropriate class.
dependency.enabled=true
dependency.scope=Class, Method, Field
duplicate.name=duplicate
duplicate.description=Section contains code which will be moved to an higher (possibly abstract) class, identified with <classname>
duplicate.enabled=true
duplicate.scope=Method, Field
javadoc.name=javadoc
javadoc.description=Section needs Javadoc..
javadoc.enabled=true
javadoc.scope=Class, Method, Field
language.name=language
language.description=Section needs to be altered to use internationalization, using english ('en') as a default.
language.enabled=true
language.scope=Class, Method, Field
license.name=license
license.description=The code for this class falls under a different (and conflicting) license, such as GPL. The code needs to be replaced or moved out of the core.
license.enabled=true
license.scope=Class
move.name=move
move.description=Class will be moved to package <packagename&lg;
move.enabled=true
move.scope=Class
performance.name=performance
performance.description=Section need be improved for performance reasons.
performance.enabled=true
performance.scope=Class, Method, Field
rename.name=rename
rename.description=Class wil be renamed to <classname>
rename.enabled=true
rename.scope=Class
requires.name=requires
requires.description=This Class needs the indicated version of the MMBase core.
requires.enabled=true
requires.scope=Class
scope.name=scope
scope.description=Section scope will be narrowed to <scope> (i.e. private, package, protected)
scope.enabled=true
scope.scope=Method, Field
sql.name=sql
sql.description=Section uses (direct) SQL queries, which will be removed/fixed
sql.enabled=true
sql.scope=Method, Field
vpro.name=vpro
vpro.description=Section contains VPRO-specific code, which will be removed/fixed
vpro.enabled=true
vpro.scope=Method, Field
